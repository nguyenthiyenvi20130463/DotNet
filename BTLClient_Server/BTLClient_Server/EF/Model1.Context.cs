//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTLClient_Server.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebBanHangEntities : DbContext
    {
        public WebBanHangEntities()
            : base("name=WebBanHangEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Anh> Anhs { get; set; }
        public virtual DbSet<CT_DonHang> CT_DonHang { get; set; }
        public virtual DbSet<DanhGia> DanhGias { get; set; }
        public virtual DbSet<DonHang> DonHangs { get; set; }
        public virtual DbSet<KhachHang> KhachHangs { get; set; }
        public virtual DbSet<LienHe> LienHes { get; set; }
        public virtual DbSet<LoaiSp> LoaiSps { get; set; }
        public virtual DbSet<SanPham> SanPhams { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ThuongHieu> ThuongHieux { get; set; }
        public virtual DbSet<TinTuc> TinTucs { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        [DbFunction("WebBanHangEntities", "DlNgay")]
        public virtual IQueryable<DlNgay_Result> DlNgay(Nullable<int> thang, Nullable<int> nam, Nullable<int> ngay)
        {
            var thangParameter = thang.HasValue ?
                new ObjectParameter("Thang", thang) :
                new ObjectParameter("Thang", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            var ngayParameter = ngay.HasValue ?
                new ObjectParameter("Ngay", ngay) :
                new ObjectParameter("Ngay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DlNgay_Result>("[WebBanHangEntities].[DlNgay](@Thang, @Nam, @Ngay)", thangParameter, namParameter, ngayParameter);
        }
    
        [DbFunction("WebBanHangEntities", "Func_ThongKeDoanhThu")]
        public virtual IQueryable<Func_ThongKeDoanhThu_Result> Func_ThongKeDoanhThu(Nullable<int> nam, Nullable<int> thang)
        {
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            var thangParameter = thang.HasValue ?
                new ObjectParameter("Thang", thang) :
                new ObjectParameter("Thang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Func_ThongKeDoanhThu_Result>("[WebBanHangEntities].[Func_ThongKeDoanhThu](@Nam, @Thang)", namParameter, thangParameter);
        }
    
        public virtual ObjectResult<BaoCaoDoanhThuThang_Result> BaoCaoDoanhThuThang(Nullable<int> thang, Nullable<int> nam)
        {
            var thangParameter = thang.HasValue ?
                new ObjectParameter("Thang", thang) :
                new ObjectParameter("Thang", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BaoCaoDoanhThuThang_Result>("BaoCaoDoanhThuThang", thangParameter, namParameter);
        }
    
        public virtual ObjectResult<DanhSachSanPham_Result> DanhSachSanPham(string tenSanPham, Nullable<int> idThuongHieu, string trangThai, Nullable<double> giaThapNhat, Nullable<double> giaCaoNhat)
        {
            var tenSanPhamParameter = tenSanPham != null ?
                new ObjectParameter("TenSanPham", tenSanPham) :
                new ObjectParameter("TenSanPham", typeof(string));
    
            var idThuongHieuParameter = idThuongHieu.HasValue ?
                new ObjectParameter("IdThuongHieu", idThuongHieu) :
                new ObjectParameter("IdThuongHieu", typeof(int));
    
            var trangThaiParameter = trangThai != null ?
                new ObjectParameter("TrangThai", trangThai) :
                new ObjectParameter("TrangThai", typeof(string));
    
            var giaThapNhatParameter = giaThapNhat.HasValue ?
                new ObjectParameter("GiaThapNhat", giaThapNhat) :
                new ObjectParameter("GiaThapNhat", typeof(double));
    
            var giaCaoNhatParameter = giaCaoNhat.HasValue ?
                new ObjectParameter("GiaCaoNhat", giaCaoNhat) :
                new ObjectParameter("GiaCaoNhat", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DanhSachSanPham_Result>("DanhSachSanPham", tenSanPhamParameter, idThuongHieuParameter, trangThaiParameter, giaThapNhatParameter, giaCaoNhatParameter);
        }
    
        public virtual ObjectResult<GetListDonHang_Result> GetListDonHang(string ten, Nullable<int> tt, Nullable<System.DateTime> tu, Nullable<System.DateTime> den)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var ttParameter = tt.HasValue ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(int));
    
            var tuParameter = tu.HasValue ?
                new ObjectParameter("tu", tu) :
                new ObjectParameter("tu", typeof(System.DateTime));
    
            var denParameter = den.HasValue ?
                new ObjectParameter("den", den) :
                new ObjectParameter("den", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListDonHang_Result>("GetListDonHang", tenParameter, ttParameter, tuParameter, denParameter);
        }
    
        public virtual ObjectResult<getListNews_Result> getListNews(string title, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getListNews_Result>("getListNews", titleParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetListOrder(string ten, string tt, Nullable<System.DateTime> tu, Nullable<System.DateTime> den)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var ttParameter = tt != null ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(string));
    
            var tuParameter = tu.HasValue ?
                new ObjectParameter("tu", tu) :
                new ObjectParameter("tu", typeof(System.DateTime));
    
            var denParameter = den.HasValue ?
                new ObjectParameter("den", den) :
                new ObjectParameter("den", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetListOrder", tenParameter, ttParameter, tuParameter, denParameter);
        }
    
        public virtual ObjectResult<GetListOrderByPage_Result> GetListOrderByPage(string ten, string tt, Nullable<System.DateTime> tu, Nullable<System.DateTime> den, Nullable<int> page, Nullable<int> pageRows)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var ttParameter = tt != null ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(string));
    
            var tuParameter = tu.HasValue ?
                new ObjectParameter("tu", tu) :
                new ObjectParameter("tu", typeof(System.DateTime));
    
            var denParameter = den.HasValue ?
                new ObjectParameter("den", den) :
                new ObjectParameter("den", typeof(System.DateTime));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageRowsParameter = pageRows.HasValue ?
                new ObjectParameter("pageRows", pageRows) :
                new ObjectParameter("pageRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListOrderByPage_Result>("GetListOrderByPage", tenParameter, ttParameter, tuParameter, denParameter, pageParameter, pageRowsParameter);
        }
    
        public virtual ObjectResult<listCustomer_Result> listCustomer(string ten, string dc)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var dcParameter = dc != null ?
                new ObjectParameter("dc", dc) :
                new ObjectParameter("dc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listCustomer_Result>("listCustomer", tenParameter, dcParameter);
        }
    
        public virtual ObjectResult<listCustomerByPage_Result> listCustomerByPage(string ten, string dc, Nullable<int> page, Nullable<int> pageRows)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var dcParameter = dc != null ?
                new ObjectParameter("dc", dc) :
                new ObjectParameter("dc", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageRowsParameter = pageRows.HasValue ?
                new ObjectParameter("pageRows", pageRows) :
                new ObjectParameter("pageRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listCustomerByPage_Result>("listCustomerByPage", tenParameter, dcParameter, pageParameter, pageRowsParameter);
        }
    
        public virtual ObjectResult<listNews_Result> listNews(string title, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listNews_Result>("listNews", titleParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<listNewsByPage_Result> listNewsByPage(string title, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<int> page, Nullable<int> pageRows)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageRowsParameter = pageRows.HasValue ?
                new ObjectParameter("pageRows", pageRows) :
                new ObjectParameter("pageRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listNewsByPage_Result>("listNewsByPage", titleParameter, startTimeParameter, endTimeParameter, pageParameter, pageRowsParameter);
        }
    
        public virtual ObjectResult<listPro_Result> listPro(string ten, Nullable<int> idTh, Nullable<int> tt, Nullable<double> min, Nullable<double> max)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var idThParameter = idTh.HasValue ?
                new ObjectParameter("idTh", idTh) :
                new ObjectParameter("idTh", typeof(int));
    
            var ttParameter = tt.HasValue ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(double));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listPro_Result>("listPro", tenParameter, idThParameter, ttParameter, minParameter, maxParameter);
        }
    
        public virtual ObjectResult<listProByPage_Result> listProByPage(string ten, Nullable<int> idTh, Nullable<int> tt, Nullable<double> min, Nullable<double> max, Nullable<int> page, Nullable<int> pageRows)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var idThParameter = idTh.HasValue ?
                new ObjectParameter("idTh", idTh) :
                new ObjectParameter("idTh", typeof(int));
    
            var ttParameter = tt.HasValue ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(double));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(double));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageRowsParameter = pageRows.HasValue ?
                new ObjectParameter("pageRows", pageRows) :
                new ObjectParameter("pageRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listProByPage_Result>("listProByPage", tenParameter, idThParameter, ttParameter, minParameter, maxParameter, pageParameter, pageRowsParameter);
        }
    
        public virtual ObjectResult<listProduct_Result> listProduct(string ten, Nullable<int> idTh, Nullable<int> tt, Nullable<double> min, Nullable<double> max)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var idThParameter = idTh.HasValue ?
                new ObjectParameter("idTh", idTh) :
                new ObjectParameter("idTh", typeof(int));
    
            var ttParameter = tt.HasValue ?
                new ObjectParameter("tt", tt) :
                new ObjectParameter("tt", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(double));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listProduct_Result>("listProduct", tenParameter, idThParameter, ttParameter, minParameter, maxParameter);
        }
    
        public virtual ObjectResult<lstOrderByIdKhachAndPage_Result> lstOrderByIdKhachAndPage(Nullable<int> idKhach, Nullable<System.DateTime> tu, Nullable<System.DateTime> den, Nullable<int> page, Nullable<int> pageRows)
        {
            var idKhachParameter = idKhach.HasValue ?
                new ObjectParameter("idKhach", idKhach) :
                new ObjectParameter("idKhach", typeof(int));
    
            var tuParameter = tu.HasValue ?
                new ObjectParameter("tu", tu) :
                new ObjectParameter("tu", typeof(System.DateTime));
    
            var denParameter = den.HasValue ?
                new ObjectParameter("den", den) :
                new ObjectParameter("den", typeof(System.DateTime));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var pageRowsParameter = pageRows.HasValue ?
                new ObjectParameter("pageRows", pageRows) :
                new ObjectParameter("pageRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lstOrderByIdKhachAndPage_Result>("lstOrderByIdKhachAndPage", idKhachParameter, tuParameter, denParameter, pageParameter, pageRowsParameter);
        }
    
        public virtual ObjectResult<lstSearchCusByNameInOrder_Result> lstSearchCusByNameInOrder(string ten)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lstSearchCusByNameInOrder_Result>("lstSearchCusByNameInOrder", tenParameter);
        }
    
        public virtual ObjectResult<lstSearchHotProduct_Result> lstSearchHotProduct(Nullable<int> nam, Nullable<int> thang)
        {
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            var thangParameter = thang.HasValue ?
                new ObjectParameter("Thang", thang) :
                new ObjectParameter("Thang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lstSearchHotProduct_Result>("lstSearchHotProduct", namParameter, thangParameter);
        }
    
        public virtual ObjectResult<lstSearchPro_Result> lstSearchPro(string ten, Nullable<int> idLoai, Nullable<double> min, Nullable<double> max)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var idLoaiParameter = idLoai.HasValue ?
                new ObjectParameter("idLoai", idLoai) :
                new ObjectParameter("idLoai", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(double));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lstSearchPro_Result>("lstSearchPro", tenParameter, idLoaiParameter, minParameter, maxParameter);
        }
    
        public virtual ObjectResult<lstSearchProByNameInOrder_Result> lstSearchProByNameInOrder(string proName)
        {
            var proNameParameter = proName != null ?
                new ObjectParameter("ProName", proName) :
                new ObjectParameter("ProName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lstSearchProByNameInOrder_Result>("lstSearchProByNameInOrder", proNameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<listLienHe_Result> listLienHe(string noiDung, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var noiDungParameter = noiDung != null ?
                new ObjectParameter("NoiDung", noiDung) :
                new ObjectParameter("NoiDung", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listLienHe_Result>("listLienHe", noiDungParameter, startTimeParameter, endTimeParameter);
        }
    }
}
